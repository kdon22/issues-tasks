import { z } from 'zod';

export const commentConfig = {
  name: 'Comment',
  actionPrefix: 'comment',
  displayFields: [
    { key: 'content', label: 'Content' },
    { key: 'user', label: 'User' },
    { key: 'issue', label: 'Issue' },
    { key: 'parent', label: 'Parent' },
    { key: 'createdAt', label: 'Created' }
  ],
  searchFields: ['content'],
  createFields: [
    { key: 'content', label: 'Content', type: 'textarea', required: true },
    { key: 'issueId', label: 'Issue', type: 'select', required: true },
    { key: 'parentId', label: 'Parent Comment', type: 'select' }
  ],
  validationSchema: z.object({
    content: z.string().min(1, 'Content is required'),
    issueId: z.string().min(1, 'Issue is required'),
    parentId: z.string().optional()
  }),
  // The factory will auto-generate handlers with complex relations
};

// Handlers are now auto-generated by DatabaseFactory!
// The factory already handles complex comment relations in the include options 